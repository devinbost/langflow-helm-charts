imagePullSecrets: []

nameOverride: "langflow"
# Override for the name of the helm deployment
fullnameOverride: "langflow"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

ingress:
  enabled: true
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"  # Specify the NGINX ingress controller
    nginx.ingress.kubernetes.io/ssl-redirect: "true"  # Handle SSL redirection
    nginx.ingress.kubernetes.io/rewrite-target: /  # Rewrite paths
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"  # Set body size limits
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"  # Use HTTP backend by default
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

langflow:
  global:
    image:
      pullPolicy: IfNotPresent
      tag: ""
  backend:
    alembicLogFile: "/tmp/alembic.log"
    logFile: "/tmp/langflow.log"
    replicaCount: 1
    service:
      type: ClusterIP
      port: 7860
    backendOnly: true
    numWorkers: 1
    image:
      repository: langflowai/langflow-ep
      pullPolicy: IfNotPresent
      tag: "v1.1.1.dev8"
    resources:
      requests:
        cpu: 0.5
        memory: 1Gi
      # limits:
      #   cpu: 0.5
      #   memory: 1Gi
    probe:
      failureThreshold: 3
      periodSeconds: 10
      timeoutSeconds: 5
      initialDelaySeconds: 5
    env: []
    nodeSelector: {}


    tolerations: []

    affinity: {}
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9090"
      prometheus.io/path: "/metrics"

    containerSecurityContext:  # Container-specific security context
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      #runAsUser: 1000730001
      seccompProfile:
        type: RuntimeDefault

    podSecurityContext:
      #fsGroup: 1000730001
      #fsGroup: 1000  # This will make the mounted volume readable by group 1000
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault

    externalDatabase:
      enabled: true
      driver:
        value: "postgresql"
      host:
        value: "langflow-ide-postgresql-service"
      port:
        value: "5432"
      username:
        value: "langflow"
      password:
        value: "langflow-postgres"
      database:
        value: "langflow-db"
    tmpDir: "/data/tmp"


    sqlite:
      enabled: false
      volume:
        size: "1Gi"
        existingStorageClassName: "default"
        # If you want the chart to create storage classes, then don't set
        # existingStorageClassName name and provide configuration values
        # for the storage class. The settings vary based on cloud
        # provider. Below are examples for AWS, GCP, and Azure.

        # For AWS
        # storageClass:
        #  provisioner: kubernetes.io/aws-ebs
        #  type: gp2
        #  fsType: ext4
        #  extraParams:
        #     iopsPerGB: "10"

        # For GCP
        # storageClass:
        #   provisioner: kubernetes.io/gce-pd
        #   type: pd-ssd
        #   fsType: ext4
        #   extraParams:
        #      replication-type: none

        # For Azure
        # storageClass:
        #   provisioner: kubernetes.io/azure-disk
        #   fsType: ext4
        #   type: managed-premium
        #   extraParams:
        #     storageaccounttype: Premium_LRS
        #     kind: Managed
        #     cachingmode: ReadOnly
        storageClass: {}

  frontend:
    enabled: true
    replicaCount: 1
    service:
      type: ClusterIP
      port: 8080
    image:
      repository: langflowai/langflow-ep # devingbost/langflowlocalfrontend #langflowai/langflow-frontend
      pullPolicy: IfNotPresent
      tag: "v1.1.1.dev8"
    resources:
      requests:
        cpu: 0.3
        memory: 512Mi
      # limits:
      #   cpu: 0.3
      #   memory: 512Mi
    probe:
      failureThreshold: 3
      periodSeconds: 10
      timeoutSeconds: 5
      initialDelaySeconds: 5
    nodeSelector: {}

    tolerations: []

    affinity: {}
    podAnnotations: {}
    securityContext:  # Container-specific security context
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      #runAsUser: 1000730001
      seccompProfile:
        type: RuntimeDefault

    podSecurityContext:
      #fsGroup: 1000730001
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault

secretProvider:
  enabled: false

postgresql:
  enabled: true
  fullnameOverride: "langflow-ide-postgresql-service"
  auth:
    username: "langflow"
    password: "langflow-postgres"
    database: "langflow-db"
